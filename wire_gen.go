// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/alfianyulianto/go-room-managament/app"
	"github.com/alfianyulianto/go-room-managament/controllers"
	"github.com/alfianyulianto/go-room-managament/repositories"
	"github.com/alfianyulianto/go-room-managament/router"
	"github.com/alfianyulianto/go-room-managament/services"
	"github.com/alfianyulianto/go-room-managament/storage"
	"github.com/alfianyulianto/go-room-managament/util"
	"github.com/go-playground/validator/v10"
	"github.com/gofiber/fiber/v2"
	"github.com/google/wire"
)

// Injectors from injector.go:

func NewInitializedServer(options ...validator.Option) *fiber.App {
	userRepositoryImpl := repositories.NewUserRepositoryImpl()
	db := app.NewDB()
	validate := validator.New(options...)
	tokenUtil := util.NewTokenUtil()
	authServiceImpl := services.NewAuthServiceImpl(userRepositoryImpl, db, validate, tokenUtil)
	authControllerImpl := controllers.NewAuthControllerImpl(authServiceImpl)
	userServiceImpl := services.NewUserServiceImpl(userRepositoryImpl, db, validate)
	userControllerImpl := controllers.NewUserControllerImpl(userServiceImpl)
	roomCategoryRepositoryImpl := repositories.NewRoomCategoryRepositoryImp(db)
	roomCategoryServiceImpl := services.NewRoomCategoryServiceImpl(roomCategoryRepositoryImpl, db, validate)
	roomCategoryControllerImpl := controllers.NewRoomCategoryControllerImpl(roomCategoryServiceImpl)
	roomRepositoryImpl := repositories.NewRoomRepositoryImpl()
	roomImageRepositoryImpl := repositories.NewRoomImageRepositoryImpl()
	localFileStorage := storage.NewLocalFileStorage()
	roomServiceImpl := services.NewRoomServiceImpl(roomRepositoryImpl, roomCategoryRepositoryImpl, roomImageRepositoryImpl, localFileStorage, db, validate)
	roomControllerImpl := controllers.NewRoomControllerImpl(roomServiceImpl)
	roomImageServiceImpl := services.NewRoomImageServiceImpl(roomRepositoryImpl, roomImageRepositoryImpl, localFileStorage, db, validate)
	roomImageControllerImpl := controllers.NewRoomImageControllerImpl(roomImageServiceImpl)
	roomReservationRepositoryImpl := repositories.NewRoomReservationRepositoryImpl()
	roomReservationServiceImpl := services.NewRoomReservationServiceImpl(roomReservationRepositoryImpl, userRepositoryImpl, roomRepositoryImpl, db, validate, localFileStorage)
	roomReservationControllerImpl := controllers.NewRoomReservationControllerImpl(roomReservationServiceImpl)
	routerConfig := router.RouterConfig{
		AuthController:            authControllerImpl,
		UserController:            userControllerImpl,
		RoomCategoryController:    roomCategoryControllerImpl,
		RoomController:            roomControllerImpl,
		RoomImageController:       roomImageControllerImpl,
		RoomReservationController: roomReservationControllerImpl,
	}
	fiberApp := router.NewRouter(routerConfig)
	return fiberApp
}

// injector.go:

var authSet = wire.NewSet(controllers.NewAuthControllerImpl, wire.Bind(new(controllers.AuthController), new(*controllers.AuthControllerImpl)), services.NewAuthServiceImpl, wire.Bind(new(services.AuthService), new(*services.AuthServiceImpl)))

var userSet = wire.NewSet(repositories.NewUserRepositoryImpl, wire.Bind(new(repositories.UserRepository), new(*repositories.UserRepositoryImpl)), services.NewUserServiceImpl, wire.Bind(new(services.UserService), new(*services.UserServiceImpl)), controllers.NewUserControllerImpl, wire.Bind(new(controllers.UserController), new(*controllers.UserControllerImpl)))

var roomCategorySet = wire.NewSet(repositories.NewRoomCategoryRepositoryImp, wire.Bind(new(repositories.RoomCategoryRepository), new(*repositories.RoomCategoryRepositoryImpl)), services.NewRoomCategoryServiceImpl, wire.Bind(new(services.RoomCategoryService), new(*services.RoomCategoryServiceImpl)), controllers.NewRoomCategoryControllerImpl, wire.Bind(new(controllers.RoomCategoryController), new(*controllers.RoomCategoryControllerImpl)))

var roomSet = wire.NewSet(repositories.NewRoomRepositoryImpl, wire.Bind(new(repositories.RoomRepository), new(*repositories.RoomRepositoryImpl)), services.NewRoomServiceImpl, wire.Bind(new(services.RoomService), new(*services.RoomServiceImpl)), controllers.NewRoomControllerImpl, wire.Bind(new(controllers.RoomController), new(*controllers.RoomControllerImpl)))

var roomImageSet = wire.NewSet(repositories.NewRoomImageRepositoryImpl, wire.Bind(new(repositories.RoomImageRepository), new(*repositories.RoomImageRepositoryImpl)), services.NewRoomImageServiceImpl, wire.Bind(new(services.RoomImageService), new(*services.RoomImageServiceImpl)), controllers.NewRoomImageControllerImpl, wire.Bind(new(controllers.RoomImageController), new(*controllers.RoomImageControllerImpl)))

var fileStorageSet = wire.NewSet(storage.NewLocalFileStorage, wire.Bind(new(storage.FileStorage), new(*storage.LocalFileStorage)))

var roomReservationSet = wire.NewSet(repositories.NewRoomReservationRepositoryImpl, wire.Bind(new(repositories.RoomReservationRepository), new(*repositories.RoomReservationRepositoryImpl)), services.NewRoomReservationServiceImpl, wire.Bind(new(services.RoomReservationService), new(*services.RoomReservationServiceImpl)), controllers.NewRoomReservationControllerImpl, wire.Bind(new(controllers.RoomReservationController), new(*controllers.RoomReservationControllerImpl)))
