// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/alfianyulianto/go-room-managament/app"
	"github.com/alfianyulianto/go-room-managament/controllers"
	"github.com/alfianyulianto/go-room-managament/repositories"
	"github.com/alfianyulianto/go-room-managament/router"
	"github.com/alfianyulianto/go-room-managament/services"
	"github.com/go-playground/validator/v10"
	"github.com/gofiber/fiber/v2"
	"github.com/google/wire"
)

// Injectors from injector.go:

func NewInitializedServer(options ...validator.Option) *fiber.App {
	userRepositoryImpl := repositories.NewUserRepositoryImpl()
	db := app.NewDB()
	validate := validator.New(options...)
	userServiceImpl := services.NewUserServiceImpl(userRepositoryImpl, db, validate)
	userControllerImpl := controllers.NewUserControllerImpl(userServiceImpl)
	roomCategoryRepositoryImpl := repositories.NewRoomCategoryRepositoryImp(db)
	roomCategoryServiceImpl := services.NewRoomCategoryServiceImpl(roomCategoryRepositoryImpl, db, validate)
	roomCategoryControllerImpl := controllers.NewRoomCategoryControllerImpl(roomCategoryServiceImpl)
	routerConfig := router.RouterConfig{
		UserController:         userControllerImpl,
		RoomCategoryController: roomCategoryControllerImpl,
	}
	fiberApp := router.NewRouter(routerConfig)
	return fiberApp
}

// injector.go:

var roomCategorySet = wire.NewSet(repositories.NewRoomCategoryRepositoryImp, wire.Bind(new(repositories.RoomCategoryRepository), new(*repositories.RoomCategoryRepositoryImpl)), services.NewRoomCategoryServiceImpl, wire.Bind(new(services.RoomCategoryService), new(*services.RoomCategoryServiceImpl)), controllers.NewRoomCategoryControllerImpl, wire.Bind(new(controllers.RoomCategoryController), new(*controllers.RoomCategoryControllerImpl)))

var userSet = wire.NewSet(repositories.NewUserRepositoryImpl, wire.Bind(new(repositories.UserRepository), new(*repositories.UserRepositoryImpl)), services.NewUserServiceImpl, wire.Bind(new(services.UserService), new(*services.UserServiceImpl)), controllers.NewUserControllerImpl, wire.Bind(new(controllers.UserController), new(*controllers.UserControllerImpl)))
